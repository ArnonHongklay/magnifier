I"Þ(function() {
  ohmpieng.controller('SettingCtrl', function($scope, $state, account, servers, $http) {
    var regexp;
    $scope.account = account.data;
    $scope.servers = servers.data.server;
    $scope.showEdit = false;
    $scope.ipaddress = false;
    $scope.phoneNumberPattern = (function() {})();
    regexp = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;
    ({
      test: function(value) {
        if ($scope.requireTel === false) {
          return true;
        }
        return regexp.test(value);
      }
    });
    $scope.addServer = function() {
      return $scope.ipaddress = true;
    };
    $scope.newipaddress = function() {
      return $scope.ipaddress = true;
    };
    $scope.setting_update = function() {
      return $http.put($scope.account.name + "/setting_update", {
        name: $scope.account.name,
        email: $scope.account.email
      }).success(result)(function() {
        return $state.go($state.current, {}, {
          reload: true
        });
      });
    };
    $scope.setting_ip_create = function(ip) {
      return $http.post($scope.account.name + "/setting_ip_create", {
        ip: ip
      }).success(function() {
        return $state.go($state.current, {}, {
          reload: true
        });
      });
    };
    return $scope.setting_ip_delete = function(ip) {
      return $http({
        url: $scope.account.name + "/setting_ip_delete",
        method: 'DELETE',
        data: {
          ip: ip
        },
        headers: {
          'Content-Type': 'application/json;charset=utf-8'
        }
      }).success(function() {
        return $state.go($state.current, {}, {
          reload: true
        });
      });
    };
  });

}).call(this);
:ET